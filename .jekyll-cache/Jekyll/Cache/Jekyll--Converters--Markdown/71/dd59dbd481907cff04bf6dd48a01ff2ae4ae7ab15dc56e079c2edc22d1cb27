I".<p>  흔히 JavaScript에 대해 설명하라 하면 자주 등장하는 단어가 객체 지향 언어이다. 이외에도 프로그래밍을 하다보면 객체 지향 프로그래밍이라는 단어를 종종 듣게된다. 이번 포스팅에서는 객체 지향 프로그래밍이 무엇인지, JavaScript가 왜 객체지향 언어라 할 수 있는지에 대해 정리해 보려한다.</p>

<p><br /></p>

<h2 id="객체지향-프로그래밍이란">객체지향 프로그래밍이란</h2>
<blockquote>
  <p>객체 지향 프로그래밍(영어: Object-Oriented Programming, OOP)은 컴퓨터 프로그래밍의 패러다임 중 하나이다. 객체 지향 프로그래밍은 컴퓨터 프로그램을 명령어의 목록으로 보는 시각에서 벗어나 여러 개의 독립된 단위, 즉 “객체”들의 모임으로 파악하고자 하는 것이다. 각각의 객체는 메시지를 주고받고, 데이터를 처리할 수 있다. -위키백과-</p>
</blockquote>

<h2 id="oop가-나타난-배경">OOP가 나타난 배경</h2>
<p>초창기에 프로그래밍은 순차적이었다. 이러한 특성때문에 반복적 작업을 할 때 특정 범위의 코드를 다시 실행하기 힘들었으며 이를 위해 goto문을 만들게 된다. 때문에 절차적 프로그래밍이라는 방법이 나타나게 되지만 전역 변수의 형태로 만들다보니 스케일이 커질수록 변수에 같은 이름을 쓸 수 없는 문제점이 발행하게 된다. 이를 해결하기 위해 나타난 형태가 struct(구조체)이며 이와함께 객체지향 프로그래밍이 등장한다. 구초제를 이용하여 프로그래밍을 하다보니 특정 구조체를 동작하는 함수군들이 만들어지게 되었고 이를 함께 관리하기 위해 class가 만들어진다.</p>

<h2 id="class">Class</h2>
:ET